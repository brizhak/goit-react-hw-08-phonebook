{"version":3,"file":"static/js/522.8fbd4b9d.chunk.js","mappings":"wMACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAA6H,yB,8BCwF7H,EA7EoB,WAGlB,IAAMA,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAkCjB,OACE,kBAAMC,SApBa,SAAAC,GACnBA,EAAEC,iBAdqB,SAACC,EAAMC,GACNT,EAASU,MAC/B,SAAAC,GAAO,OAAIA,EAAQH,OAASA,EAAKI,aAA1B,IAIPC,MAAM,0BAAD,OAA2BL,EAA3B,uBAGPL,GAASW,EAAAA,EAAAA,IAAW,CAAEN,KAAAA,EAAMC,OAAAA,KAC5BM,SAASC,eAAe,QAAQC,QACjC,CAMCC,CAFWZ,EAAEa,cAAcC,SAASZ,KAAKa,MAC5Bf,EAAEa,cAAcC,SAASX,OAAOY,MAK9C,EAY+BC,GAAG,OAAOC,UAAWC,EAAnD,WACE,mBAAOD,UAAWC,EAAlB,UAA+B,QAE7B,kBACED,UAAWC,EACXC,KAAK,OACLjB,KAAK,OACLkB,QAAQ,2HACRC,YAAY,aACZC,MAAM,yIACNC,UAAQ,QAMZ,mBAAON,UAAWC,EAAlB,UAA+B,UAE7B,kBACED,UAAWC,EACXC,KAAK,MACLjB,KAAK,SACLkB,QAAQ,qGACRC,YAAY,qBACZC,MAAM,+FACNC,UAAQ,QAMZ,mBAAQJ,KAAK,SAASF,UAAWC,EAAjC,SAA4C,kBAKjD,ECtFD,EAAsB,yB,UCStB,EATc,WACZ,OACE,4BACE,uBAAG,4CACH,yBAAG,mBAAiBM,EAAAA,QAGzB,EC+CD,EA1CoB,WAClB,IAAM9B,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB6B,GAAY9B,EAAAA,EAAAA,IAAY+B,EAAAA,IACxBC,GAAQhC,EAAAA,EAAAA,IAAY6B,EAAAA,IACpB3B,GAAWC,EAAAA,EAAAA,MAEX8B,EAAe,SAAA5B,GACnB,IAAM6B,EAAQ7B,EAAEa,cAAcG,GAE9BnB,GAASiC,EAAAA,EAAAA,IAAcD,GACxB,EAID,OAHAE,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAEF,wBACa,OAAV8B,GACC,SAAC,EAAD,IACEF,GACF,SAACQ,EAAA,EAAD,IAEAvC,GACAA,EAASwC,KAAI,SAAA7B,GAAO,OAClB,2BACE,yBACGA,EAAQH,KAAK,MAAIG,EAAQF,WAE5B,mBACEc,UAAWC,EACXC,KAAK,SACLH,GAAIX,EAAQW,GACZmB,QAASP,EAJX,SAKC,aATMvB,EAAQW,GADC,KAkB3B,E,UCpDD,EAAwB,sBAAxB,EAAsD,sBCgCtD,EA3Be,WACb,IAAMoB,GAASzC,EAAAA,EAAAA,IAAY0C,EAAAA,IACrBxC,GAAWC,EAAAA,EAAAA,MAQjB,OAHAiC,EAAAA,EAAAA,YAAU,WACRlC,GAASyC,EAAAA,EAAAA,IAAoBF,GAC9B,GAAE,CAACvC,EAAUuC,KAEZ,+BACE,mBAAOnB,UAAWC,EAAlB,UAA+B,yBAE7B,kBACED,UAAWC,EACXC,KAAK,OACLjB,KAAK,SACLmB,YAAY,aACZN,MAAOqB,EACPG,SAhBa,SAAAvC,GACnBH,GAAS2C,EAAAA,EAAAA,IAAUxC,EAAEa,cAAcE,OACpC,QAmBF,EC9BD,EAA4B,6BCiB5B,EAZkB,WAChB,OACE,iBAAKE,UAAWC,EAAhB,WACE,wBAAI,eACJ,SAAC,EAAD,KACA,wBAAI,cACJ,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["webpack://goit-react-hw-07-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-07-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/Error/Error.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-07-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-07-phonebook/./src/pages/Phonebook.module.css?cbd2","pages/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import React from 'react';\nimport style from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContact,\n  selectContacts,\n  // selectName,\n  // selectNumber,\n  // setName,\n  // setNumber,\n} from 'redux/contactsSlice';\n\nconst ContactForm = () => {\n  // const name = useSelector(selectName);\n  // const number = useSelector(selectNumber);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = (name, number) => {\n    const existingContact = contacts.find(\n      contact => contact.name === name.toLowerCase()\n    );\n\n    if (existingContact) {\n      alert(`Contact with the name \"${name}\" already exists.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    document.getElementById('form').reset();\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    let name = e.currentTarget.elements.name.value;\n    let number = e.currentTarget.elements.number.value;\n    handleAddContact(name, number);\n\n    // dispatch(setName(''));\n    // dispatch(setNumber(''));\n  };\n\n  // const handleChange = e => {\n  //   const { name, value } = e.target;\n  //   if (name === 'name') {\n  //     dispatch(setName(value));\n  //   } else if (name === 'number') {\n  //     dispatch(setNumber(value));\n  //   }\n  // };\n\n  return (\n    <form onSubmit={onSubmitForm} id=\"form\" className={style.form}>\n      <label className={style.label}>\n        Name\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Enter name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          // value={name}\n          // onChange={handleChange}\n        />\n      </label>\n\n      <label className={style.label}>\n        Number\n        <input\n          className={style.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          placeholder=\"Enter phone number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          // value={number}\n          // onChange={handleChange}\n        />\n      </label>\n\n      <button type=\"submit\" className={style.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactList_btn__6Piat\"};","import { selectError } from 'redux/contactsSlice';\nconst Error = () => {\n  return (\n    <div>\n      <p>Something went wrong. Please try again</p>\n      <p>Error message : {selectError}</p>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useEffect } from 'react';\nimport style from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\nimport {\n  deleteContact,\n  requestContacts,\n  selectError,\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contactsSlice';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const handleDelete = e => {\n    const idBtn = e.currentTarget.id;\n\n    dispatch(deleteContact(idBtn));\n  };\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n  return (\n    <ul>\n      {error !== null ? (\n        <Error />\n      ) : isLoading ? (\n        <Loader />\n      ) : (\n        contacts &&\n        contacts.map(contact => (\n          <li key={contact.id}>\n            <p>\n              {contact.name} : {contact.number}\n            </p>\n            <button\n              className={style.btn}\n              type=\"button\"\n              id={contact.id}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterQuery, setFilter } from '../../redux/filterSlice';\nimport style from './Filter.module.css';\nimport { setFilteredContacts } from 'redux/contactsSlice';\nimport { useEffect } from 'react';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilterQuery);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n  useEffect(() => {\n    dispatch(setFilteredContacts(filter));\n  }, [dispatch, filter]);\n  return (\n    <>\n      <label className={style.label}>\n        Find contacts by name\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n          value={filter}\n          onChange={handleFilter}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__1anZw\"};","import React from 'react';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport style from './Phonebook.module.css';\n\nconst Phonebook = () => {\n  return (\n    <div className={style.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["contacts","useSelector","selectContacts","dispatch","useDispatch","onSubmit","e","preventDefault","name","number","find","contact","toLowerCase","alert","addContact","document","getElementById","reset","handleAddContact","currentTarget","elements","value","id","className","style","type","pattern","placeholder","title","required","selectError","isLoading","selectIsLoading","error","handleDelete","idBtn","deleteContact","useEffect","requestContacts","Loader","map","onClick","filter","selectFilterQuery","setFilteredContacts","onChange","setFilter"],"sourceRoot":""}